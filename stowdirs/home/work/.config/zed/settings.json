// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "context_servers": {
    "mcp-server-github": {
      "source": "extension",
      "enabled": true,
      "settings": {
        "github_personal_access_token": "$GITHUB_MCP_PERSONAL_ACCESS_TOKEN"
      }
    }
  },
  "theme": {
    "mode": "system",
    "dark": "Ayu Dark",
    "light": "One Light"
  },
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false
  },
  "tabs": {
    "file_icons": true,
    "git_status": true
  },
  "project_panel": {
    "indent_size": 16
  },
  "preferred_line_length": 120,
  "tab_size": 2,
  "edit_predictions": {
    "mode": "subtle"
  },
  "features": {
    "edit_prediction_provider": "copilot"
  },
  "minimap": {
    "show": "never",
    "thumb": "always",
    "thumb_border": "left_open",
    "display_in": "active_editor"
  },
  "agent": {
    "inline_assistant_model": {
      "provider": "copilot_chat",
      "model": "claude-3.7-sonnet"
    },
    "commit_message_model": {
      "provider": "copilot_chat",
      "model": "gpt-4.1"
    },
    "thread_summary_model": {
      "provider": "copilot_chat",
      "model": "gpt-4.1"
    },
    "profiles": {
      "write": {
        "name": "Write",
        "tools": {
          "copy_path": true,
          "create_directory": true,
          "delete_path": true,
          "diagnostics": true,
          "edit_file": true,
          "fetch": true,
          "list_directory": true,
          "project_notifications": true,
          "move_path": true,
          "now": true,
          "find_path": true,
          "read_file": true,
          "grep": true,
          "terminal": true,
          "thinking": true,
          "web_search": true
        },
        "enable_all_context_servers": true,
        "context_servers": {
          "mcp-server-context7": {
            "tools": {
              "resolve-library-id": true,
              "get-library-docs": true
            }
          }
        }
      },
      "ask": {
        "name": "Ask",
        "tools": {
          "contents": true,
          "diagnostics": true,
          "fetch": true,
          "list_directory": true,
          "now": true,
          "find_path": true,
          "read_file": true,
          "open": true,
          "grep": true,
          "thinking": true,
          "web_search": true,
          "terminal": true
        },
        "enable_all_context_servers": false,
        "context_servers": {
          "mcp-server-github": {
            "tools": {
              "list_issues": true,
              "list_discussions": true,
              "list_commits": true,
              "get_pull_request_status": true,
              "get_pull_request_reviews": true,
              "get_pull_request_files": true,
              "get_pull_request_diff": true,
              "get_pull_request": true,
              "get_pull_request_comments": true,
              "get_issue": true,
              "get_issue_comments": true,
              "get_commit": true
            }
          },
          "mcp-server-context7": {
            "tools": {
              "resolve-library-id": true,
              "get-library-docs": true
            }
          }
        }
      },
      "github": {
        "name": "GitHub",
        "tools": {
          "edit_file": true
        },
        "enable_all_context_servers": false,
        "context_servers": {
          "mcp-server-github": {
            "tools": {
              "manage_repository_notification_subscription": true,
              "manage_notification_subscription": true,
              "assign_copilot_to_issue": false,
              "update_pull_request_branch": true,
              "update_pull_request": true,
              "update_issue": true,
              "request_copilot_review": true,
              "mark_all_notifications_read": true,
              "list_tags": true,
              "list_discussion_categories": true,
              "get_workflow_run_usage": false,
              "dismiss_notification": true,
              "create_pending_pull_request_review": true,
              "create_pull_request": true,
              "create_issue": true,
              "add_issue_comment": true,
              "search_users": true,
              "search_repositories": true,
              "search_pull_requests": true,
              "search_orgs": true,
              "search_issues": true,
              "search_code": true,
              "list_pull_requests": true,
              "list_notifications": true,
              "list_issues": true,
              "list_discussions": true,
              "list_branches": true,
              "list_commits": true,
              "get_workflow_run_logs": false,
              "get_workflow_run": false,
              "get_tag": true,
              "get_secret_scanning_alert": true,
              "get_pull_request_status": true,
              "get_pull_request_reviews": true,
              "get_pull_request_files": true,
              "get_pull_request_diff": true,
              "get_pull_request_comments": true,
              "get_pull_request": true,
              "get_notification_details": true,
              "get_me": true,
              "get_job_logs": true,
              "get_issue_comments": true,
              "get_issue": true,
              "get_file_contents": true,
              "get_discussion_comments": true,
              "get_commit": true,
              "get_discussion": true,
              "add_comment_to_pending_review": true
            }
          }
        }
      }
    },
    "always_allow_tool_actions": true,
    "default_profile": "write",
    "play_sound_when_agent_done": false,
    "model_parameters": [
      {
        "provider": "anthropic",
        "model": "claude-sonnet-4-latest"
      }
    ],
    "default_model": {
      "provider": "anthropic",
      "model": "claude-sonnet-4-latest"
    }
  },
  "vim_mode": true,
  "ui_font_size": 16,
  "ui_font_fallbacks": ["Symbols Nerd Font Mono"],
  "buffer_font_size": 16,
  "buffer_font_family": "MonoLisa",
  "terminal": {
    "font_family": "MonoLisa",
    "ui_font_fallbacks": ["Symbols Nerd Font Mono"],
    "default_height": 420,
    "font_size": 16
  },
  "vim": {
    "default_mode": "normal",
    "toggle_relative_line_numbers": true,
    "use_system_clipboard": "always",
    "use_multiline_find": false,
    "use_smartcase_find": false,
    "highlight_on_yank_duration": 200,
    "custom_digraphs": {},
    "scroll_beyond_last_line": "one_page",
    // Cursor shape for the each mode.
    // Specify the mode as the key and the shape as the value.
    // The mode can be one of the following: "normal", "replace", "insert", "visual".
    // The shape can be one of the following: "block", "bar", "underline", "hollow".
    "cursor_shape": {}
  },
  "lsp": {
    "dart": {
      "settings": {
        "flutterHotReloadOnSave": "always",
        "flutterDaemonLogFile": "/tmp/flutter-daemon.log",
        "analysisExcludedFolders": [".dart_tool", "build"],
        "enableSnippets": true,
        "maxCompletionItems": 100
      },
      "initialization_options": {
        "onlyAnalyzeProjectsWithOpenFiles": false,
        "suggestFromUnimportedLibraries": true,
        "closingLabels": true,
        "outline": true,
        "flutterOutline": true
      }
    },
    "rust-analyzer": {
      "initialization_options": {
        "rustfmt": {
          "overrideCommand": ["leptosfmt", "--stdin", "--rustfmt"]
        }
      },
      "procMacro": {
        "ignored": [
          // optional:
          // "component",
          "server"
        ]
      }
    }
  }
}
